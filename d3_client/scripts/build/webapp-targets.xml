<project name="webapp-targets" basedir="../..">

    <import file="${basedir}/build.xml" optional="false" />

    <!-- ======================================================
     Each sole service target should declare following properties
      * service.name - name of the service, e.g wpvs
      * webapp.conf.dir - location of the configuration, e.g ${basedir}/resources/example/conf/wpvs/
      * webapp.data.dir - location of the data, e.g ${basedir}/resources/example/data/wpvs/
      and if using the generic client:
      * webapp.client.dir  - location of the 'generic' or other web client, e.g. ${basedir}/resources/client-template/" />
      * webapp.requests.dir - location of the requests, e.g ${basedir}/resources/example/requests/wpvs/
       ======================================================== -->
		
    <target name="init-template-necessities" depends="build">
    	<delete dir="${meta.inf}" />
        <mkdir dir="${meta.inf}" />
    	<delete dir="${web.inf}" />
        <mkdir dir="${web.inf}" />
    	<delete dir="${web.lib}" />
        <mkdir dir="${web.lib}" />
    	<delete dir="${web.classes}" />
        <mkdir dir="${web.classes}" />
	</target>

    <target name="make-manifest" depends="init-template-necessities">
        <!-- fill the META-INF directory with the manifest file and the context.xml-->
        <manifest file="${meta.inf}/MANIFEST.MF">
            <attribute name="Built-By" value="${build.by}" />
            <attribute name="Implementation-Vendor" value="lat/lon GmbH, Germany" />
            <attribute name="Implementation-Version" value="${version}.${build.number}" />
        </manifest>
        <echo file="${meta.inf}/context.xml" message="&lt;Context antiResourceLocking='true' antiJARLocking='true'&gt;${nl}  &lt;WatchedResource&gt;../WEB-INF/web.xml&lt;/WatchedResource&gt;${nl}&lt;/Context&gt;" />
        <!-- delete the WEB-INF/lib/classes directory, a better way is to thought of -->
        <!--delete dir="${web.lib}/classes" /-->
    </target>
	
    <target name="copy-libs" depends="make-manifest">
        <!-- delete the old libs -->
        <delete dir="${web.lib}"/>
    	<mkdir dir="${web.lib}" />
        <copy todir="${web.lib}">
            <!--fileset refid="build.path.fileset" excludes="${exclude.dependency.jars}"/-->
            <fileset dir="${lib.dir}" includes="*.jar" />
            <fileset dir="${build.dir}">
                <include name="${jar.name}.jar" />
            </fileset>
        </copy>
    	<!-- delete all 'illegal' jars -->
        <delete>
            <fileset dir="${web.lib}/">
                <include name="junit*" />
                <include name="servlet*" />
                <include name="jsp*" />
            </fileset>
        </delete>
    </target>
			
	<target name="copy-resources" depends="copy-libs">
		<copy todir="${webapp}">
			<fileset dir="${client.dir}">
				<include name="*" />
				<include name="client/**" />
				<include name="images/**" />
			</fileset>
		</copy>
	</target>
	
    <target name="copy-src-resources" depends="copy-resources">
        <copy todir="${web.classes}" flatten="true" failonerror="false">
            <fileset dir="${src.dir}">
                <include name="**/*.properties" />
                <include name="**/*.xml" />
                <exclude name="**/messages*" />
            </fileset>
        </copy>
    </target>
	
	<target name="copy-web-xml" depends="copy-src-resources">
		<copy todir="${web.inf}" file="${client.conf}/web.xml" />
	</target>



    <target name="create-webapp" depends="copy-src-resources" />
	
	<target name="copy-info-to-index-file">
	    <echoxml file="${webapp}/index.html">
	      <a href="${client.file}"><h3>${client.name}-client</h3></a><br />
	    </echoxml>
	</target>
       	
    <!-- ======================================================
        Deployment targets
       ======================================================== -->

    <!-- build the war-->
    <target name="build-war" description="creates war-file from webapp directory">
        <property name="web.inf" value="${webapp}/WEB-INF" />
        <fail message="No web.xml found please run one of the create-webapp targets to generate a war of your likings.">
            <condition>
                <not>
                    <available file="${web.inf}/web.xml" />
                </not>
            </condition>
        </fail>

        <property name="war.name" value="${module.name}.war" />
        <war destfile="${build.dir}/${war.name}" webxml="${web.inf}/web.xml" update="true">
            <fileset dir="${webapp}">
                <include name="**" />
            </fileset>
        </war>
    </target>



    <target name="register-webapp" description="register webapp directory in tomcat">
        <fail message="Tomcat dir: ${tomcat.basedir} is missing, please make sure the property tomcat.basedir is correctly set, by editing the build.properties">
            <condition>
                <not>
                    <available file="${tomcat.basedir}" type="dir" property="tocmat_dir_available" />
                </not>
            </condition>
        </fail>
        <!-- create the context dir if not existent (e.g. vanilla tomcat 6) else just don't do anything -->
        <mkdir dir="${tomcat.contextsdir}" />

        <echoxml file="${tomcat.contextsdir}/${module.name}.xml">
            <Context docBase="${webapp}" privileged="true" antiResourceLocking="false" antiJARLocking="false" />
        </echoxml>
    </target>

    <target name="unregister-webapp" description="deregister webapp directory from tomcat">
        <delete file="${tomcat.contextsdir}/${module.name}.xml" />
    </target>
	
	
	
	<target name="build-sos-client" description="-> build the SOS client webapp">
		<property name="client.name" value="sos" />
		<property name="client.dir" value="${basedir}/webapp-template/${client.name}" />
		<property name="client.conf" value="${basedir}/resources/configuration/${client.name}" />
		<antcall target="copy-web-xml" />	    
	</target>
	
	<target name="build-wpvs-client" description="-> build the WPVS client webapp">
		<property name="client.name" value="wpvs" />
		<property name="client.dir" value="${basedir}/webapp-template/${client.name}" />
		<property name="client.conf" value="${basedir}/resources/configuration/${client.name}" />
		<antcall target="copy-web-xml" />	
		
		<property name="client.file" value="client/wpvsclient.jsp" />
		<antcall target="copy-info-to-index-file" />
	</target>
</project>
