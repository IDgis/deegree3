<project name="cite" basedir="../.." xmlns:ivy="antlib:org.apache.ivy.ant">

    <import file="${basedir}/build.xml" optional="false" />

    <property name="cite.dir" value="${basedir}/resources/cite" />
    <property name="tmp.dir" value="${java.io.tmpdir}" />

    <property name="team2.basedir" value="/tmp/cite_testing/team2" />

    <!-- URL where Tomcat archive (configured for port 18080) is loaded from -->
    <property name="test-tomcat.srcurl" value="http://download.deegree.org/test-artefacts/tomcat-6-p18080.tar.gz" />
    <property name="test-tomcat.basedir" value="${tmp.dir}/d3_test_tomcat/" />
    <property name="test-tomcat.archive" value="${tmp.dir}/tomcat-6-p18080.tar.gz" />

    <target name="build-wfs-100" description="Create webapp for running CITE WFS 1.0.0 tests">
        <property name="webapp.name" value="cite-wfs-100" />
        <property name="webapp.src" value="${basedir}/resources/cite/wfs-1.0.0/webapp" />
        <antcall target="init-webapp" />
    </target>

    <target name="build-wfs-110" description="Create webapp for running CITE WFS 1.1.0 tests">
        <property name="webapp.name" value="cite-wfs-110" />
        <property name="webapp.src" value="${basedir}/resources/cite/wfs-1.1.0/webapp" />
        <antcall target="init-webapp" />
    </target>

	<target name="run-tests" description="Run all CITE tests" depends="publish-nightly">
	    <antcall target="run-wfs-100" />
	    <antcall target="run-wfs-110" />

        <junitreport todir="${build.dir}">
            <fileset dir="${build.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${build.dir}/html" />
        </junitreport>		
	</target>
	
    <target name="run-wfs-100" description="Create webapp for running CITE WFS 1.0.0 tests and run test suite" depends="build-wfs-100,compile">

        <property name="suite.dir" value="wfs100" />
        <antcall target="setup-tomcat" />
        <antcall target="start-tomcat" />

        <echo message="Invoking CITE WFS 1.0.0 test suite" />
        <junit maxmemory="1024m" fork="yes" haltonfailure="no" haltonerror="no">
            <classpath>
                <pathelement location="${basedir}/lib/cite" />
                <fileset dir="${basedir}/lib/cite">
                    <include name="*.jar" />
                </fileset>
                <pathelement location="${cite.dir}/wfs-1.0.0/cite/resources" />
                <pathelement path="${classes.dir}" />
                <path refid="build.path" />
            </classpath>
            <sysproperty key="cite.script" value="${cite.dir}/wfs-1.0.0/cite/ctl/wfs.xml" />
            <formatter type="xml" />
            <test name="org.deegree.test.cite.CiteWFS100TestSuite" todir="${build.dir}" />
        </junit>

        <junitreport todir="${build.dir}">
            <fileset dir="${build.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${build.dir}/html" />
        </junitreport>

        <antcall target="stop-tomcat" />
    </target>

    <target name="run-wfs-110" description="Create webapp for running CITE WFS 1.1.0 tests and run test suite" depends="build-wfs-110,compile">

        <property name="suite.dir" value="wfs110" />
        <antcall target="setup-tomcat" />
        <antcall target="start-tomcat" />

        <echo message="Invoking CITE WFS 1.1.0 test suite" />
        <junit maxmemory="1024m" fork="yes" haltonfailure="no" haltonerror="no">
            <classpath>
                <pathelement location="${basedir}/lib/cite" />
                <fileset dir="${basedir}/lib/cite">
                    <include name="*.jar" />
                </fileset>
                <pathelement location="${cite.dir}/wfs-1.1.0/cite/resources" />
                <pathelement path="${classes.dir}" />
                <path refid="build.path" />
            </classpath>
            <sysproperty key="cite.script" value="${cite.dir}/wfs-1.1.0/cite/src/main.xml" />
            <formatter type="xml" />
            <test name="org.deegree.test.cite.CiteWFS110TestSuite" todir="${build.dir}" />
        </junit>

        <junitreport todir="${build.dir}">
            <fileset dir="${build.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${build.dir}/html" />
        </junitreport>

        <antcall target="stop-tomcat" />
    </target>

    <target name="setup-tomcat" depends="retrieve-tomcat">
        <delete dir="${test-tomcat.basedir}" failonerror="false" />
        <untar src="${test-tomcat.archive}" dest="${test-tomcat.basedir}" compression="gzip" />
        <copy todir="${test-tomcat.basedir}/webapps/${webapp.name}">
            <fileset dir="${build.dir}/${webapp.name}" defaultexcludes="true">
                <include name="**" />
            </fileset>
        </copy>
    </target>

    <target name="start-tomcat">
        <java jar="${test-tomcat.basedir}/bin/bootstrap.jar" spawn="true" fork="true">
            <jvmarg value="-Dcatalina.home=${test-tomcat.basedir}" />
        </java>
        <sleep seconds="10" />
    </target>

    <target name="check-for-tomcat">
        <echo message="Checking if Tomcat started up" />
        <get src="http://127.0.0.1:18080" dest="/tmp/tomcat" />
    </target>

    <target name="stop-tomcat">
        <java jar="${test-tomcat.basedir}/bin/bootstrap.jar" fork="true">
            <jvmarg value="-Dcatalina.home=${test-tomcat.basedir}" />
            <arg line="stop" />
        </java>
    </target>

    <target name="init-webapp" depends="load-ivy">

        <property name="webapp.dir" value="${build.dir}/${webapp.name}" />

        <!-- copy webapp skeleton -->
        <delete dir="${webapp.dir}" failonerror="false" />
        <mkdir dir="${webapp.dir}" />
        <copy todir="${webapp.dir}">
            <fileset dir="${webapp.src}" defaultexcludes="true">
                <include name="**" />
            </fileset>
        </copy>

        <!-- added needed libraries -->
        <ivy:retrieve conf="${module.name}-deployservices" pattern="${webapp.dir}/WEB-INF/lib/[artifact](-[revision]).[ext]" file="${dependencies.file}" log="${ivy.resolve.verbose}" sync="true" />
    </target>

    <!-- Retrieve archive that contains pre-configured Tomcat 6 (port 18080) -->
    <target name="retrieve-tomcat">
        <get src="${test-tomcat.srcurl}" dest="${test-tomcat.archive}" usetimestamp="true" />
    </target>

</project>
