#$HeadURL: https://svn.wald.intevation.org/svn/deegree/deegree3/commons/trunk/src/log4j.properties $
# $Id: log4j.properties 15715 2009-01-21 11:50:26Z rbezema $
#
# =============================================================
# ------------------- deegree log configuration  --------------
# =============================================================
#
# This is the configuration file for the log4j-based deegree logging.
#
# =============================================================
# ------------------- log output configuration  ---------------
# =============================================================

# The rootLogger option defines where the log output should go.
# Log4j uses appender to direct the output to a specific target.
# By default deegree logs to the console (appender: stdout)
log4j.rootLogger=INFO, stdout
# To also log into a logfile (example below):
#log4j.rootLogger=INFO, logfile, stdout

# Below is the configuration of the log appender. The format of
# the log messages is configured with the ConversionPattern option.
# see http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/PatternLayout.html

# =============== console output appender =====================
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{HH:mm:ss}] %5p: [%c{1}] %m%n

# =============== 'deegree.log' file appender =================

#log.dir=${user.home}
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#log4j.appender.logfile.File=${log.dir}/deegree.log
#log4j.appender.logfile.MaxFileSize=1000KB
# Keep one backup file
#log4j.appender.logfile.MaxBackupIndex=1
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
#log4j.appender.logfile.layout.ConversionPattern=%d %-5p [%c] %m%n


# =============================================================
# ---- log configuration for deegree packages and classes -----
# =============================================================
# The configuration is hierarchical, log levels will be
# inherited from parents. Following log levels are available:
# TRACE (most messages)
# DEBUG
# INFO
# WARN
# ERROR
# FATAL (only fatal error messages)

